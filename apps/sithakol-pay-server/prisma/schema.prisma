datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  password     String
  paymentLinks PaymentLink[]
  roles        Json
  updatedAt    DateTime      @updatedAt
  username     String        @unique
  wallets      Wallet[]
}

model PaymentLink {
  createdAt               DateTime               @default(now())
  expiresAt               DateTime?
  id                      String                 @id @default(cuid())
  linkId                  String?
  requestedAmountInCrypto Float?
  requestedAmountInFiat   Float?
  status                  EnumPaymentLinkStatus?
  transactions            Transaction[]
  updatedAt               DateTime               @updatedAt
  user                    User?                  @relation(fields: [userId], references: [id])
  userId                  String?
}

model Transaction {
  createdAt          DateTime                      @default(now())
  id                 String                        @id @default(cuid())
  paidAmountInCrypto Float?
  paidAmountInFiat   Float?
  paymentLink        PaymentLink?                  @relation(fields: [paymentLinkId], references: [id])
  paymentLinkId      String?
  paymentMethod      EnumTransactionPaymentMethod?
  status             EnumTransactionStatus?
  transactionId      String?
  updatedAt          DateTime                      @updatedAt
}

model Wallet {
  balance   Float?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  walletId  String?
}

enum EnumPaymentLinkStatus {
  Option1
}

enum EnumTransactionPaymentMethod {
  Option1
}

enum EnumTransactionStatus {
  Option1
}
